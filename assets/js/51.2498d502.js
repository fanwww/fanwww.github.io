(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{424:function(_,t,a){"use strict";a.r(t);var v=a(8),r=Object(v.a)({},(function(){var _=this,t=_._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[t("h2",{attrs:{id:"_1-基础选择器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-基础选择器"}},[_._v("#")]),_._v(" 1.基础选择器")]),_._v(" "),t("h3",{attrs:{id:"_1-1-id选择器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-id选择器"}},[_._v("#")]),_._v(" 1.1. ID选择器")]),_._v(" "),t("p",[_._v('ID选择器使用 "#" 号加ID名称xx来表示，用来选择HTML 中的id="xxx"的DOM元素')]),_._v(" "),t("h3",{attrs:{id:"_1-2-类选择器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-类选择器"}},[_._v("#")]),_._v(" 1.2. 类选择器")]),_._v(" "),t("p",[_._v('类选择器我们是用 “.” 加上claa名称来表示,用来选择HTML中的class="xx"的DOM元素。')]),_._v(" "),t("h3",{attrs:{id:"_1-3-通配符选择器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-通配符选择器"}},[_._v("#")]),_._v(" 1.3. 通配符选择器")]),_._v(" "),t("p",[_._v("通配符选择器使用 * 来选择页面里面的所有元素")]),_._v(" "),t("h3",{attrs:{id:"_1-4-标签选择器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-标签选择器"}},[_._v("#")]),_._v(" 1.4. 标签选择器")]),_._v(" "),t("p",[_._v("标签选择器就是选中HTML中某一种类的标签，直接使用HTML中的标签名作为肖泽强的名称")]),_._v(" "),t("h3",{attrs:{id:"_1-5-属性选择器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-属性选择器"}},[_._v("#")]),_._v(" 1.5. 属性选择器")]),_._v(" "),t("p",[_._v('属性选择器通过DOM的属性来选择DOM节点，属性选择器用括号"[]"包裹')]),_._v(" "),t("h2",{attrs:{id:"_2-组合选择器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-组合选择器"}},[_._v("#")]),_._v(" 2.组合选择器")]),_._v(" "),t("h3",{attrs:{id:"_2-1-后代选择器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-后代选择器"}},[_._v("#")]),_._v(" 2.1. 后代选择器")]),_._v(" "),t("p",[_._v("后代选择器是用空格分隔多个选择器组合,它的作用是在A选择器的后代中找到B选择器所指的元素")]),_._v(" "),t("h3",{attrs:{id:"_2-2-子元素选择器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-子元素选择器"}},[_._v("#")]),_._v(" 2.2. 子元素选择器")]),_._v(" "),t("p",[_._v("子元素选择器和后代选择器类似，不过子元素只找子元素,不会把所有的后代都找一遍")]),_._v(" "),t("h3",{attrs:{id:"_2-3-相邻兄弟选择器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-相邻兄弟选择器"}},[_._v("#")]),_._v(" 2.3. 相邻兄弟选择器")]),_._v(" "),t("p",[_._v('相邻兄弟选择器是用来选取某个元素紧邻的兄弟元素,它的语法是"选择器A + 选择器B"')]),_._v(" "),t("h3",{attrs:{id:"_2-4-通用兄弟选择器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-通用兄弟选择器"}},[_._v("#")]),_._v(" 2.4. 通用兄弟选择器")]),_._v(" "),t("p",[_._v('通用兄弟选择器和相邻兄弟选择器很相似,它的语法是"选择器A ~ 选择器B"，会匹配选择器A后面所有符合选择器B的元素')]),_._v(" "),t("h3",{attrs:{id:"_2-5-交集选择器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-交集选择器"}},[_._v("#")]),_._v(" 2.5. 交集选择器")]),_._v(" "),t("p",[_._v('交集选择器是为了找两个或多个选择器的交集,用法就是把两个选择器放在一起,法语"选择器A选择器B"')]),_._v(" "),t("h3",{attrs:{id:"_2-6-并集选择器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-并集选择器"}},[_._v("#")]),_._v(" 2.6. 并集选择器")]),_._v(" "),t("p",[_._v('并集选择器是为了合并类型的样式,可以是选择器不用单样式相同的CSS语法块合并。并集选择器就是用多个逗号分隔多个选择器,如"选择器A,选择器B"')]),_._v(" "),t("h2",{attrs:{id:"_3-伪类和伪元素选择器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-伪类和伪元素选择器"}},[_._v("#")]),_._v(" 3.伪类和伪元素选择器")]),_._v(" "),t("h3",{attrs:{id:"_3-1-标记状态的伪类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-标记状态的伪类"}},[_._v("#")]),_._v(" 3.1. 标记状态的伪类")]),_._v(" "),t("p",[_._v(":link 选取未访问过的超链接")]),_._v(" "),t("p",[_._v(":visited 选取访问过的连接")]),_._v(" "),t("p",[_._v(":hover 选取鼠标悬浮的元素")]),_._v(" "),t("p",[_._v(":active 选取点中的元素")]),_._v(" "),t("p",[_._v(":focus 选取获取焦点的元素")]),_._v(" "),t("h3",{attrs:{id:"_3-2-筛选功能的伪类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-筛选功能的伪类"}},[_._v("#")]),_._v(" 3.2. 筛选功能的伪类")]),_._v(" "),t("p",[_._v(":empty 选取没有子元素的元素")]),_._v(" "),t("p",[_._v(":checked")]),_._v(" "),t("p",[_._v("选取勾选状态下的input 元素  只对 radio 和checkbox 有效")]),_._v(" "),t("p",[_._v(":disabled 选取禁用的表单元素")]),_._v(" "),t("p",[_._v(":first-child 选取当前选择器下的第一个元素")]),_._v(" "),t("p",[_._v(":last-child 选取当前选择器下的最后一个元素")]),_._v(" "),t("p",[_._v(":nth-child(an+b) 选取指定位置的元素,参数支持an+b的形势.比如 li:nth(2n+1),就可以选取li元素序号是2的整数倍+1的所有元素,也就是1,3,5,7,9序号的li元素")]),_._v(" "),t("p",[_._v(":nth-last-child(an+b) 和上面类似,不过从后面选取.")]),_._v(" "),t("p",[_._v(":only-child 选取元素唯一的子元素,如果元素的父元素只有它一个子元素就会生效,如果还有其他的兄弟元素,则不生效")]),_._v(" "),t("p",[_._v(":only-of-type选取唯一的某个元素类型。如果元素的父元素只有它一个当前类型的子元素就会生效。")]),_._v(" "),t("h3",{attrs:{id:"_3-3-伪元素选择器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-伪元素选择器"}},[_._v("#")]),_._v(" 3.3. 伪元素选择器")]),_._v(" "),t("p",[_._v("::first-line为元素的第一行使用样式")]),_._v(" "),t("p",[_._v("::first-letter为某个元素的首字母或第一个文字使用样式")]),_._v(" "),t("p",[_._v("::before在某个元素之前插入内容")]),_._v(" "),t("p",[_._v("::after在某个元素之后插入内容")]),_._v(" "),t("p",[_._v("::selection对光标选中的元素添加样式")]),_._v(" "),t("h4",{attrs:{id:"注意"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#注意"}},[_._v("#")]),_._v(" 注意:")]),_._v(" "),t("p",[_._v("1.伪元素构造的元素是虚拟的,所以不能使用js去操作")]),_._v(" "),t("p",[_._v("2.first-line和first-letter不使用于内联样式,在内联样式中都会失效")]),_._v(" "),t("p",[_._v("3.如果同时使用了 befor 和first-letter. 第一个内容要从before中算起,如果before 中第一个为非文本内容,那first-letter也会作用到这个非文本内容上,但不会生效。")]),_._v(" "),t("p",[_._v("4.在CSS3 中规定, 伪类用一个冒号 (😃 表示, 伪元素用两个冒号 (::)来表示")])])}),[],!1,null,null,null);t.default=r.exports}}]);