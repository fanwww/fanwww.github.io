(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{296:function(t,s,a){t.exports=a.p+"assets/img/image-20220319143229397.4ef00726.png"},297:function(t,s,a){t.exports=a.p+"assets/img/image-20220319152214886.5f1aa224.png"},298:function(t,s,a){t.exports=a.p+"assets/img/image-20220319152828490.2b9a1fc4.png"},299:function(t,s,a){t.exports=a.p+"assets/img/image-20220319153140622.809dc9b0.png"},300:function(t,s,a){t.exports=a.p+"assets/img/image-20220319153324397.8877126e.png"},301:function(t,s,a){t.exports=a.p+"assets/img/image-20220319153533049.37a431a5.png"},302:function(t,s,a){t.exports=a.p+"assets/img/image-20210512185116624.30e74d8a.png"},303:function(t,s,a){t.exports=a.p+"assets/img/image-20210524173910554.73f7ac52.png"},490:function(t,s,a){"use strict";a.r(s);var e=a(8),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"一、mysql锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、mysql锁"}},[t._v("#")]),t._v(" 一、mySQL锁")]),t._v(" "),s("blockquote",[s("p",[t._v("在我们平时开发中可能很少考虑锁的问题(特别是做前端的时候),这是因为数据库隐式帮我们添加了锁:")]),t._v(" "),s("ul",[s("li",[t._v("对于"),s("code",[t._v("UPDATE、DELETE、INSERT")]),t._v("语句,InnoDB("),s("em",[t._v("mySQL的数据库引擎之一,现为MySQL的默认存储引擎")]),t._v(")会自动将涉及的数据集添加 "),s("strong",[t._v("排他锁(X锁)")])]),t._v(" "),s("li",[t._v("事务拿到某一行记录的 "),s("strong",[t._v("共享锁(S锁)")]),t._v(" 才可以读取这一行,并阻止其他事务对其添加排他锁")]),t._v(" "),s("li",[t._v("事务拿到一行记录的 "),s("strong",[t._v("排他锁(X锁)")]),t._v(" 才可以修改或和删除这一行")])]),t._v(" "),s("h5",{attrs:{id:"共享锁的目的是为了提高读取的并发-排他锁的目的时为了保证数据的一致性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#共享锁的目的是为了提高读取的并发-排他锁的目的时为了保证数据的一致性"}},[t._v("#")]),t._v(" 共享锁的目的是为了提高读取的并发;排他锁的目的时为了保证数据的一致性")]),t._v(" "),s("p",[t._v("我们在某些特定的场景下才需要手动进行加所,学习数据库锁知识就是为了:")]),t._v(" "),s("ul",[s("li",[t._v("更好地控制程序代码")]),t._v(" "),s("li",[t._v("能让我们在特定场景上派上用场")]),t._v(" "),s("li",[t._v("构建自己的数据库知识体系")])]),t._v(" "),s("p",[s("img",{attrs:{src:a(296),alt:"image-20220319143229397"}})])]),t._v(" "),s("h3",{attrs:{id:"_1、悲观锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、悲观锁"}},[t._v("#")]),t._v(" 1、悲观锁")]),t._v(" "),s("blockquote",[s("p",[t._v("悲观锁（Pessimistic Lock），顾名思义，就是很悲观，每次去拿数据的时候都认为别人会修改，所以每次在拿数据的时候都会上锁，这样别人想拿这个数据就会block直到它拿到锁。")]),t._v(" "),s("ul",[s("li",[t._v("悲观锁：假定会发生并发冲突，屏蔽一切可能违反数据完整性的操作。")]),t._v(" "),s("li",[t._v("Java synchronized 就属于悲观锁的一种实现，每次线程要修改数据时都先获得锁，保证同一时刻只有一个线程能操作数据，其他线程则会被block。")]),t._v(" "),s("li",[s("code",[t._v("共享锁")]),t._v("与"),s("code",[t._v("排他锁")]),t._v("都是"),s("strong",[t._v("悲观锁")]),t._v("的范畴")])])]),t._v(" "),s("h4",{attrs:{id:"i-注意点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#i-注意点"}},[t._v("#")]),t._v(" Ⅰ- 注意点")]),t._v(" "),s("blockquote",[s("p",[t._v("要使用悲观锁我们就必须先关闭Mysql数据库的自动提交属性,因为Mysql默认使用 autocommit 模式")]),t._v(" "),s("p",[t._v("也就是说当你执行一个更新操作,Mysql会立即将结果进行提交")]),t._v(" "),s("h6",{attrs:{id:"排他锁与共享锁是悲观锁的不同实现-他们都属于悲观锁的范畴"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#排他锁与共享锁是悲观锁的不同实现-他们都属于悲观锁的范畴"}},[t._v("#")]),t._v(" 排他锁与共享锁是悲观锁的不同实现,他们都属于悲观锁的范畴")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n   * 更新库存(使用悲观锁)\n   * @param productId\n   * @return\n*/")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("updateStock")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Long")]),t._v(" productId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//先锁定商品库存记录")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ProductStock")]),t._v(" product "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("query")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"SELECT * FROM tb_product_stock WHERE product_id=#{productId} FOR UPDATE"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" productId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("product"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getNumber")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n           "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" updateCnt "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("update")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"UPDATE tb_product_stock SET number=number-1 WHERE product_id=#{productId}"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" productId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n           "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("updateCnt "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//更新库存成功")]),t._v("\n               "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n           "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br")])])]),t._v(" "),s("h4",{attrs:{id:"ii-排他锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ii-排他锁"}},[t._v("#")]),t._v(" Ⅱ- 排他锁")]),t._v(" "),s("blockquote",[s("p",[t._v("排他锁与共享锁相对应,就是指对于多个不同事务,对同一个资源只能有一把锁,与共享锁类似,在需要执行的语句后面加上 "),s("code",[t._v("for update")]),t._v(" 就可以了")]),t._v(" "),s("ul",[s("li",[t._v("用域数据修改操作,例如:"),s("code",[t._v("UPDATE、DELETE、INSERT")]),t._v("语句.确保不会同时对同一资源进行多重更新")]),t._v(" "),s("li",[t._v("如果事务T对数据A加上排他锁后,则其他事务不能再对A加任何类型的封锁.")]),t._v(" "),s("li",[t._v("获准排他锁的数据技能读取数据还能修改数据")])])]),t._v(" "),s("h4",{attrs:{id:"iii-共享锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#iii-共享锁"}},[t._v("#")]),t._v(" Ⅲ - 共享锁")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("共享锁(S锁)")]),t._v(" 用于不更改或不更新数据的操作(只读操作),例如"),s("code",[t._v("SELECT")]),t._v("语句")]),t._v(" "),s("p",[t._v("如果事务T对数据A加上共享锁后: "),s("strong",[t._v("其他事务只能对A再加共享锁,不能加排他锁.获准共享锁的事务只能读数据,不可修改数据")])])]),t._v(" "),s("h4",{attrs:{id:"举个栗子"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#举个栗子"}},[t._v("#")]),t._v(" 举个栗子")]),t._v(" "),s("blockquote",[s("ol",[s("li",[t._v("开启共享锁")])]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("begin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" city "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("lock")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("share")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("mode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("然后在另一个查询窗口中对id为1的数据进行更新")])]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("update")]),t._v("  city "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"努力学习的汪"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("ol",{attrs:{start:"3"}},[s("li",[t._v("此时操作界面进入了卡顿状态,过了几秒也提示错误信息")])]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SQL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("update")]),t._v("  city "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"努力学习的汪"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1205")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Lock")]),t._v(" wait timeout exceeded"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" try restarting "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("transaction")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("ol",{attrs:{start:"4"}},[s("li",[t._v("如此就证明对于 "),s("code",[t._v("id=1")]),t._v(" 的记录枷锁成功了:")])]),t._v(" "),s("blockquote",[s("p",[t._v("在上一条记录还没有commmit之前,这条 "),s("code",[t._v("id=1")]),t._v("的记录被锁住了,只有在上一个事务书房掉锁后才能进行操作,或用共享锁才能对此数据进行操作")])])]),t._v(" "),s("h4",{attrs:{id:"_2、乐观锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、乐观锁"}},[t._v("#")]),t._v(" 2、乐观锁")]),t._v(" "),s("blockquote",[s("p",[t._v("乐观锁（Optimistic Lock），顾名思义，就是很乐观，每次去拿数据的时候都认为别人不会修改，所以不会上锁，但是在提交更新的时候会判断一下在此期间别人有没有去更新这个数据。乐观锁适用于读多写少的应用场景，这样可以提高吞吐量。")]),t._v(" "),s("p",[t._v("乐观锁：假设不会发生并发冲突，只在提交操作时检查是否违反数据完整性。")])]),t._v(" "),s("h4",{attrs:{id:"i-乐观锁的两种方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#i-乐观锁的两种方式"}},[t._v("#")]),t._v(" Ⅰ - 乐观锁的两种方式")]),t._v(" "),s("h4",{attrs:{id:"_1-使用数据版本实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-使用数据版本实现"}},[t._v("#")]),t._v(" ① 使用数据版本实现")]),t._v(" "),s("blockquote",[s("h6",{attrs:{id:"使用数据版本-version-记录机制实现-这是乐观锁最常用的一种实现方式。何谓数据版本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用数据版本-version-记录机制实现-这是乐观锁最常用的一种实现方式。何谓数据版本"}},[t._v("#")]),t._v(" 使用数据版本（Version）记录机制实现，这是乐观锁最常用的一种实现方式。何谓数据版本？")]),t._v(" "),s("ol",[s("li",[t._v("即为数据增加一个版本标识，一般是通过为数据库表增加一个数字类型的 “version” 字段来实现。")]),t._v(" "),s("li",[t._v("当读取数据时，将version字段的值一同读出，数据每更新一次，对此version值加一。")]),t._v(" "),s("li",[t._v("当我们提交更新的时候，判断数据库表对应记录的当前版本信息与第一次取出来的version值进行比对")]),t._v(" "),s("li",[t._v("如果数据库表当前版本号与第一次取出来的version值相等，则予以更新，否则认为是过期数据。")])])]),t._v(" "),s("h4",{attrs:{id:"_2-使用时间戳-timestamp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-使用时间戳-timestamp"}},[t._v("#")]),t._v(" ② 使用时间戳（timestamp）")]),t._v(" "),s("blockquote",[s("p",[t._v("乐观锁定的第二种实现方式和第一种差不多:")]),t._v(" "),s("ol",[s("li",[t._v("同样是在需要乐观锁控制的table中增加一个字段，名称无所谓，字段类型使用时间戳（timestamp）")]),t._v(" "),s("li",[t._v("和上面的version类似，也是在更新提交的时候检查当前数据库中数据的时间戳和自己更新前取到的时间戳进行对比")]),t._v(" "),s("li",[t._v("如果一致则OK，否则就是版本冲突。")])])]),t._v(" "),s("h4",{attrs:{id:"ii-举个栗子"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ii-举个栗子"}},[t._v("#")]),t._v(" Ⅱ- 举个栗子")]),t._v(" "),s("blockquote",[s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n    * 下单减库存\n    * @param productId\n    * @return\n*/")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("updateStock")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Long")]),t._v(" productId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" updateCnt "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("updateCnt "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n           "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ProductStock")]),t._v(" product "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("query")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"SELECT * FROM tb_product_stock WHERE product_id=#{productId}"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" productId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n           "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("product"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getNumber")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n               "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//这里进行判断,number需要等于number才能更新")]),t._v("\n               updateCnt "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("update")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"UPDATE tb_product_stock SET number=number-1 WHERE product_id=#{productId} AND number=#{number}"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" productId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" product"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getNumber")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n               "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("updateCnt "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//更新库存成功")]),t._v("\n                   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n               "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n           "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//卖完啦")]),t._v("\n               "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n           "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br")])])]),t._v(" "),s("h3",{attrs:{id:"_3、行锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、行锁"}},[t._v("#")]),t._v(" 3、行锁")]),t._v(" "),s("blockquote",[s("p",[t._v("行锁，由字面意思理解，就是给某一行加上锁，也就是一条记录加上锁。")]),t._v(" "),s("p",[t._v("比如之前的共享锁语句")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" city "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("lock")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("share")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("mode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("由于对于city表中,id字段为主键，就也相当于索引。执行加锁时，会将id这个索引为1的记录加上锁，那么这个锁就是行锁。")]),t._v(" "),s("p",[t._v("除此之外还有表锁,但不进行深入研究记录")])]),t._v(" "),s("h4",{attrs:{id:"i-innodb引擎的数据库状态查看-分析行锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#i-innodb引擎的数据库状态查看-分析行锁"}},[t._v("#")]),t._v(" Ⅰ - InnoDB引擎的数据库状态查看（分析行锁）")]),t._v(" "),s("blockquote",[s("p",[t._v("通过检查InnoDB_row_lock状态变量来分析系统上的行锁的争夺情况")]),t._v(" "),s("div",{staticClass:"language-sql line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("show")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("status")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("like")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'innodb_row_lock%'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("对于各个状态说明如下：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("Innodb_row_lock_current_waits")]),t._v(": 当前正在等待锁的数量；")]),t._v(" "),s("li",[s("code",[t._v("Innodb_row_lock_time")]),t._v(": 从系统启动到现在锁定总时间长度；")]),t._v(" "),s("li",[s("code",[t._v("Innodb_row_lock_time_avg")]),t._v("：每次等待所花平均时间；")]),t._v(" "),s("li",[s("code",[t._v("Innodb_row_lock_time_max")]),t._v(": 从系统启动到现在等待最长的一次所花的时间长度；")]),t._v(" "),s("li",[s("code",[t._v("Innodb_row_lock_waits")]),t._v(": 系统启动到现在总共等待的次数")])])]),t._v(" "),s("h2",{attrs:{id:"二、数据库设计"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、数据库设计"}},[t._v("#")]),t._v(" 二、数据库设计")]),t._v(" "),s("h3",{attrs:{id:"_1、数据库设计三大范式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、数据库设计三大范式"}},[t._v("#")]),t._v(" 1、数据库设计三大范式")]),t._v(" "),s("blockquote",[s("p",[t._v("为了建立冗余较小、结构合理的数据库，设计数据库时必须遵循一定的规则。在关系型数据库中这种规则就称为范式。范式是符合某一种设计要求的总结。要想设计一个结构合理的关系型数据库，必须满足一定的范式。")]),t._v(" "),s("ol",[s("li",[t._v("每一列只有一个值")]),t._v(" "),s("li",[t._v("每一行都能区分。")]),t._v(" "),s("li",[t._v("每一个表都不包含其他表已经包含的非主关键字信息。")])])]),t._v(" "),s("h2",{attrs:{id:"三、mysql相关的问题与解答"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、mysql相关的问题与解答"}},[t._v("#")]),t._v(" 三、Mysql相关的问题与解答")]),t._v(" "),s("h3",{attrs:{id:"_1、myisam索引底层是什么结构-b-tree"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、myisam索引底层是什么结构-b-tree"}},[t._v("#")]),t._v(" 1、MyISAM索引底层是什么结构? --"),s("code",[t._v("B+ Tree")])]),t._v(" "),s("blockquote",[s("h6",{attrs:{id:"b-tree"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#b-tree"}},[t._v("#")]),t._v(" "),s("code",[t._v("B+ Tree")])]),t._v(" "),s("p",[s("strong",[t._v("MyISAM索引文件和数据文件是分离的，索引文件仅保存数据记录的地址")]),t._v("。而在InnoDB中，表数据文件本身就是按"),s("code",[t._v("B+Tree")]),t._v("组织的一个索引结构，这棵树的叶节点data域保存了完整的数据记录。这个索引的key是数据表的主键，因此InnoDB表数据文件本身就是主索引")]),t._v(" "),s("p",[s("img",{attrs:{src:a(297),alt:"image-20220319152214886"}})])]),t._v(" "),s("h3",{attrs:{id:"_2、mysql如何解决脏读、不可重复读、幻读"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、mysql如何解决脏读、不可重复读、幻读"}},[t._v("#")]),t._v(" 2、MySQL如何解决脏读、不可重复读、幻读")]),t._v(" "),s("h4",{attrs:{id:"i-脏读"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#i-脏读"}},[t._v("#")]),t._v(" Ⅰ - 脏读")]),t._v(" "),s("blockquote",[s("h6",{attrs:{id:"什么是脏读"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是脏读"}},[t._v("#")]),t._v(" 什么是脏读?")]),t._v(" "),s("p",[t._v("脏读是指一个事务中访问到了另外一个事务未提交的数据")]),t._v(" "),s("p",[s("img",{attrs:{src:a(298),alt:"image-20220319152828490"}})]),t._v(" "),s("ul",[s("li",[t._v("如果会话2更新age到10,但是在commit之前会话1希望得到age: 那么会获得的值就是更新前的值")]),t._v(" "),s("li",[t._v("或者会话2更新了值但是执行了 "),s("code",[t._v("rollback")]),t._v(",而会话1拿到的仍是10,这就是脏读")])])]),t._v(" "),s("h4",{attrs:{id:"ii-幻读"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ii-幻读"}},[t._v("#")]),t._v(" Ⅱ - 幻读")]),t._v(" "),s("blockquote",[s("p",[t._v("一个事务读取2次,得到的记录条数不一致")]),t._v(" "),s("p",[s("img",{attrs:{src:a(299),alt:"image-20220319153140622"}})]),t._v(" "),s("p",[t._v("上图很明显的表示了这个情况，由于在会话 1 之间插入了一个新的值，所以得到的两次数据就不一样了")])]),t._v(" "),s("h4",{attrs:{id:"iii-不可重复读"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#iii-不可重复读"}},[t._v("#")]),t._v(" Ⅲ - 不可重复读")]),t._v(" "),s("blockquote",[s("p",[t._v("一个事务读取同一条记录2次,得到的结果不一致")]),t._v(" "),s("p",[s("img",{attrs:{src:a(300),alt:"image-20220319153324397"}})]),t._v(" "),s("p",[t._v("由于在读取中间变更了数据，所以会话 1 事务查询期间的得到的结果就不一样了")])]),t._v(" "),s("h4",{attrs:{id:"iv-解决方案"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#iv-解决方案"}},[t._v("#")]),t._v(" Ⅳ - 解决方案")]),t._v(" "),s("blockquote",[s("p",[t._v("解决方案即是下面四种隔离级别,他们可以最大程度避免以上三种情况的发生")])]),t._v(" "),s("h3",{attrs:{id:"_3、mysql-数据隔离级别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、mysql-数据隔离级别"}},[t._v("#")]),t._v(" 3、MySQL 数据隔离级别")]),t._v(" "),s("blockquote",[s("p",[t._v("MySQL 里有四个隔离级别：")]),t._v(" "),s("ol",[s("li",[t._v("Read uncommttied(可以读取未提交数据)--未授权读取")]),t._v(" "),s("li",[t._v("Read committed(可以读取已提交数据) --授权读取")]),t._v(" "),s("li",[t._v("Repeatable read(可重复读) --可重复读取")]),t._v(" "),s("li",[t._v("Serializable(可串行化) --序列化")])]),t._v(" "),s("h6",{attrs:{id:"在-innodb-中-默认为-repeatable-级别-innodb-中使用一种被称为-next-key-locking-的策略来避免幻读-phantom-现象的产生"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在-innodb-中-默认为-repeatable-级别-innodb-中使用一种被称为-next-key-locking-的策略来避免幻读-phantom-现象的产生"}},[t._v("#")]),t._v(" 在 InnoDB 中，默认为 Repeatable 级别，InnoDB 中使用一种被称为 next-key locking 的策略来避免幻读(phantom)现象的产生")]),t._v(" "),s("p",[t._v("不同的事务隔离级别会导致不同的问题：")]),t._v(" "),s("p",[s("img",{attrs:{src:a(301),alt:"image-20220319153533049"}})])]),t._v(" "),s("h4",{attrs:{id:"i-read-uncommttied-未授权读取"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#i-read-uncommttied-未授权读取"}},[t._v("#")]),t._v(" Ⅰ - Read uncommttied--未授权读取")]),t._v(" "),s("blockquote",[s("p",[t._v("也称为读未提交(Read Uncommitted)：允许脏读取，但不允许更新丢失。")]),t._v(" "),s("p",[t._v("如果一个事务已经开始写数据，则另外一个事务则不允许同时进行写操作，但允许其他事务读此行数据。该隔离级别可以通过“排他写锁”实现")])]),t._v(" "),s("h4",{attrs:{id:"ii-read-committed-授权读取"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ii-read-committed-授权读取"}},[t._v("#")]),t._v(" Ⅱ - Read committed--授权读取")]),t._v(" "),s("blockquote",[s("p",[t._v("也称为读提交(Read Committed)：允许不可重复读取，但不允许脏读取。")]),t._v(" "),s("p",[t._v("这可以通过“瞬间共享读锁”和“排他写锁”实现。读取数据的事务允许其他事务继续访问该行数据，但是未提交的写事务将会禁止其他事务访问该行。")])]),t._v(" "),s("h4",{attrs:{id:"iii-repeatable-read-可重复读取"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#iii-repeatable-read-可重复读取"}},[t._v("#")]),t._v(" Ⅲ - Repeatable read--可重复读取")]),t._v(" "),s("blockquote",[s("p",[t._v("可重复读取(Repeatable Read)：禁止不可重复读取和脏读取，但是有时可能出现幻读数据。")]),t._v(" "),s("p",[t._v("这可以通过“共享读锁”和“排他写锁”实现。读取数据的事务将会禁止写事务(但允许读事务)，写事务则禁止任何其他事务。")])]),t._v(" "),s("h4",{attrs:{id:"iv-serializable-序列化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#iv-serializable-序列化"}},[t._v("#")]),t._v(" Ⅳ - Serializable--序列化")]),t._v(" "),s("blockquote",[s("p",[t._v("序列化(Serializable)：提供严格的事务隔离。它要求事务序列化执行，事务只能一个接着一个地执行，不能并发执行。")]),t._v(" "),s("ul",[s("li",[t._v("仅仅通过“行级锁”是无法实现事务序列化的，必须通过其他机制保证新插入的数据不会被刚执行查询操作的事务访问到。")]),t._v(" "),s("li",[t._v("隔离级别越高，越能保证数据的完整性和一致性，但是对并发性能的影响也越大。")]),t._v(" "),s("li",[t._v("对于多数应用程序，可以优先考虑把数据库系统的隔离级别设为"),s("code",[t._v("Read Committed(授权读取)")]),t._v("。它能够避免脏读取，而且具有较好的并发性能。尽管它会导致不可重复读、幻读和第二类丢失更新这些并发问题，在可能出现这类问题的个别场合，可以由应用程序采用悲观锁或乐观锁来控制。")])])]),t._v(" "),s("h2",{attrs:{id:"四、常见的报错与解决"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四、常见的报错与解决"}},[t._v("#")]),t._v(" 四、常见的报错与解决")]),t._v(" "),s("h3",{attrs:{id:"_1、解除输入的安全模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、解除输入的安全模式"}},[t._v("#")]),t._v(" 1、解除输入的安全模式")]),t._v(" "),s("blockquote",[s("ol",[s("li",[s("p",[t._v("报错:"),s("code",[t._v("You are using safe update mode and you tried to update a table without a WHERE that uses a KEY column. To disable safe mode, toggle the option in Preferences -> SQL Editor and reconnect.\t0.000 sec")])])]),t._v(" "),s("li",[s("p",[t._v("这是因为MySql运行在safe-updates模式下，该模式会导致非主键条件下"),s("code",[t._v("无法执行update或者delete命令")]),t._v("。")])]),t._v(" "),s("li",[s("p",[t._v("show variables like ‘SQL_SAFE_UPDATES’;查看开关状态。")])]),t._v(" "),s("li",[s("p",[t._v("执行命令SET SQL_SAFE_UPDATES = 0;修改下数据库模式")]),t._v(" "),s("p",[s("img",{attrs:{src:a(302),alt:"image-20210512185116624"}})])]),t._v(" "),s("li",[s("p",[t._v("至此可以正常修改了")])])])]),t._v(" "),s("h3",{attrs:{id:"_2、忘记密码-修改密码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、忘记密码-修改密码"}},[t._v("#")]),t._v(" 2、忘记密码 修改密码")]),t._v(" "),s("blockquote",[s("ol",[s("li",[s("p",[t._v("报错:"),s("code",[t._v("ERROR 1045 (28000): Access denied for user 'root'@'localhost' (using password: YES)")]),t._v(",后面这个也可能是"),s("code",[t._v("password:NO")])])]),t._v(" "),s("li",[s("p",[t._v("出现场景,这个问题总是在"),s("code",[t._v("Mysql8.0")]),t._v("版本出现,我们班很多同学都出现了这个问题,包括命名密码正确,但是就是无法读取链接数据库,这时就需要修改密码")])]),t._v(" "),s("li",[s("p",[t._v("此处给出一个个人觉得最简单的方法:")])]),t._v(" "),s("li",[s("p",[t._v("打开"),s("code",[t._v("服务")]),t._v(",找到``Mysql`服务,双击打开")])]),t._v(" "),s("li",[s("p",[t._v("如果"),s("code",[t._v("MysqlId")]),t._v("在运行,需要先关闭")])]),t._v(" "),s("li",[s("p",[t._v("直接在"),s("code",[t._v("登录")]),t._v("中修改密码")])]),t._v(" "),s("li",[s("p",[t._v("重启服务")])])]),t._v(" "),s("p",[s("img",{attrs:{src:a(303),alt:"image-20210524173910554"}})])])])}),[],!1,null,null,null);s.default=n.exports}}]);